plugins {
    id 'java-library'
    id 'maven-publish'
}

base {
    archivesName = "${mod_id}-${project.name}"
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
    // https://docs.gradle.org/current/userguide/declaring_repositories.html#declaring_content_exclusively_found_in_one_repository
    exclusiveContent {
        forRepository {
            maven {
                name = 'Sponge'
                url = 'https://repo.spongepowered.org/repository/maven-public'
            }
        }
        filter { includeGroupAndSubgroups('org.spongepowered') }
    }
    exclusiveContent {
        forRepositories(
                maven {
                    name = 'ParchmentMC'
                    url = 'https://maven.parchmentmc.org/'
                },
                maven {
                    name = "NeoForge"
                    url = 'https://maven.neoforged.net/releases'
                }
        )
        filter { includeGroup('org.parchmentmc.data') }
    }
    maven {
        name = 'BlameJared'
        url = 'https://maven.blamejared.com'
    }
}

sourcesJar {
    from(rootProject.file('LICENSE')) {
        rename { "${it}_${mod_id}" }
    }
}

jar {
    from(rootProject.file('LICENSE')) {
        rename { "${it}_${mod_id}" }
    }

    manifest {
        attributes([
                'Specification-Title'   : "Additional Entity Attributes",
                'Specification-Vendor'  : "DaFuqs, MerchantPug",
                'Specification-Version' : archiveVersion,
                'Implementation-Title'  : project.name,
                'Implementation-Version': archiveVersion,
                'Implementation-Vendor' : "DaFuqs, MerchantPug",
                'Built-On-Minecraft'    : minecraft_version
        ])
    }
}

processResources {
    var expandProps = [
            'version'                           : version,
            'neoforge_version'                  : neoforge_version,
            'neoforge_loader_version_range'     : neoforge_loader_version_range,
            'neoforge_minecraft_version_range'  : neoforge_minecraft_version_range,
            'neoforge_version_range'            : neoforge_version_range,
            'fabric_minecraft_version_range'    : fabric_minecraft_version_range
    ]

    filesMatching(['fabric.mod.json', 'META-INF/neoforge.mods.toml']) {
        expand expandProps
    }
    inputs.properties(expandProps)
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url System.getenv('local_maven_url')
        }
    }
}
